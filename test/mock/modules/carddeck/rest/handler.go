// Code generated by MockGen. DO NOT EDIT.
// Source: ./modules/carddeck/internal/rest/handler.go

// Package mock_rest is a generated GoMock package.
package mock_rest

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/raymondwongso/carddeck/modules/carddeck/entity"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// CreateDeck mocks base method.
func (m *MockService) CreateDeck(ctx context.Context, shuffled bool, cardCodes []string) (*entity.Deck, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDeck", ctx, shuffled, cardCodes)
	ret0, _ := ret[0].(*entity.Deck)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDeck indicates an expected call of CreateDeck.
func (mr *MockServiceMockRecorder) CreateDeck(ctx, shuffled, cardCodes interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDeck", reflect.TypeOf((*MockService)(nil).CreateDeck), ctx, shuffled, cardCodes)
}

// DrawCards mocks base method.
func (m *MockService) DrawCards(ctx context.Context, id string, n int64) (*entity.Cards, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DrawCards", ctx, id, n)
	ret0, _ := ret[0].(*entity.Cards)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DrawCards indicates an expected call of DrawCards.
func (mr *MockServiceMockRecorder) DrawCards(ctx, id, n interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DrawCards", reflect.TypeOf((*MockService)(nil).DrawCards), ctx, id, n)
}

// GetDeck mocks base method.
func (m *MockService) GetDeck(ctx context.Context, id string) (*entity.Deck, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeck", ctx, id)
	ret0, _ := ret[0].(*entity.Deck)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDeck indicates an expected call of GetDeck.
func (mr *MockServiceMockRecorder) GetDeck(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeck", reflect.TypeOf((*MockService)(nil).GetDeck), ctx, id)
}
